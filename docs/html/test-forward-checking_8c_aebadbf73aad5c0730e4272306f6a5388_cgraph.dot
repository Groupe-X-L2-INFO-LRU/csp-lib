digraph "test_three_var_diff"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Roboto,fontsize=10,labelfontname=Roboto,labelfontsize=10];
  node [fontname=Roboto,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="test_three_var_diff",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="csp_constraint_create",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a7c7ffdd26fbe5e2729b593cc6937cdcf",tooltip="Creates a new constraint with the specified arity and check function."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="csp_initialised",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#aca1712012517bff1090a471f502cf729",tooltip="Checks if the CSP library is initialized."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="csp_constraint_set\l_variable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a6929282e729d2c786b6be546b1c3e312",tooltip="Sets which CSP variable is related to a specific position in the constraint."];
  Node4 -> Node3 [id="edge4_Node000004_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node5 [id="edge5_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="csp_problem_create",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a536e0507b779b2300d004ef8347d4d8b",tooltip="Creates a new CSP problem instance with the specified parameters."];
  Node5 -> Node3 [id="edge6_Node000005_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node6 [id="edge7_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="csp_problem_destroy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a0f4b67899ee7788002586217b13dde81",tooltip="Destroys a CSP problem instance and frees all associated resources."];
  Node6 -> Node7 [id="edge8_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="csp_constraint_destroy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a8fd5c98995a35845e7e57f9b13666231",tooltip="Destroys a constraint and frees all associated resources."];
  Node7 -> Node3 [id="edge9_Node000007_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node3 [id="edge10_Node000006_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge11_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="csp_problem_set_constraint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#ade8bd97367581ba9f1d4c8675fa11636",tooltip="Sets a constraint at the specified position in the CSP problem."];
  Node8 -> Node3 [id="edge12_Node000008_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node9 [id="edge13_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="csp_problem_set_domain",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a0d1cbedfaeb27e353d49f3f9c9f5a30a",tooltip="Sets the domain size for a variable in the CSP problem."];
  Node9 -> Node3 [id="edge14_Node000009_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node10 [id="edge15_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="csp_problem_solve_forward\l_checking",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$forward-checking_8c.html#aab2b763fd1833131dc1b7f43b2c7942a",tooltip="Solves a CSP problem using the forward checking algorithm with heuristics."];
  Node10 -> Node11 [id="edge16_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="backtrack_fc",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$forward-checking_8c.html#a1f0b1f4d23987c6c2209df2c7e2570ce",tooltip=" "];
  Node11 -> Node11 [id="edge17_Node000011_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node3 [id="edge18_Node000011_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node12 [id="edge19_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="fc_is_consistent",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$forward-checking_8c.html#a400289d0fceaceb244ed1e32f4860880",tooltip="Checks consistency of the current assignment under forward checking."];
  Node12 -> Node13 [id="edge20_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="csp_constraint_get\l_arity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a0ec9ba5a3f78127657d0ab0f2d3a5bbd",tooltip="Gets the arity of a constraint."];
  Node13 -> Node3 [id="edge21_Node000013_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node14 [id="edge22_Node000012_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="csp_constraint_get\l_check",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#ac9b8e8925b0302c3cdd35b0186a1acd8",tooltip="Gets the check function associated with a constraint."];
  Node14 -> Node3 [id="edge23_Node000014_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node15 [id="edge24_Node000012_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="csp_constraint_get\l_variable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a4cfb5884d7fe282dbecebefb53bb9cdd",tooltip="Gets the variable ID associated with a specific position in the constraint."];
  Node15 -> Node3 [id="edge25_Node000015_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node16 [id="edge26_Node000012_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="csp_problem_get_constraint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#aba7697a379d5f761429bb911e2bc2bbc",tooltip="Gets the constraint at the specified position in the CSP problem."];
  Node16 -> Node3 [id="edge27_Node000016_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node17 [id="edge28_Node000012_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="csp_problem_get_num\l_constraints",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a1dc56cea8c87ec1ef2e4489536cd1f0e",tooltip="Gets the number of constraints in the CSP problem."];
  Node17 -> Node3 [id="edge29_Node000017_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node18 [id="edge30_Node000011_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="order_values_lcv",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$heuristics_8c.html#a9c3a8a6b03e49553f45c6144f97e1fb4",tooltip="Implements the Least Constraining Value (LCV) heuristic for value ordering."];
  Node18 -> Node13 [id="edge31_Node000018_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node15 [id="edge32_Node000018_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node16 [id="edge33_Node000018_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node17 [id="edge34_Node000018_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node19 [id="edge35_Node000011_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="prune_neighbors",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$heuristics_8c.html#a2840f304ec278feae32d3d11915a7a78",tooltip="Prunes inconsistent values from neighboring variables during forward checking."];
  Node19 -> Node13 [id="edge36_Node000019_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node14 [id="edge37_Node000019_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node15 [id="edge38_Node000019_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node16 [id="edge39_Node000019_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node17 [id="edge40_Node000019_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node20 [id="edge41_Node000011_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="restore_pruned",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$heuristics_8c.html#a22131bfb5921b024b7886b33b3fa1c4b",tooltip="Restores values that were pruned during forward checking when backtracking occurs."];
  Node11 -> Node21 [id="edge42_Node000011_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="select_unassigned_var",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$heuristics_8c.html#a934ee1c54ecdfa65b205d3f9888e38de",tooltip="Implements the Minimum Remaining Values (MRV) heuristic for variable selection."];
  Node10 -> Node22 [id="edge43_Node000010_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="csp_forward_check_context\l_create",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$forward-checking_8c.html#a80a2e22a4514587505e87b68cd29841b",tooltip="Creates and initializes a forward checking context."];
  Node22 -> Node13 [id="edge44_Node000022_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node14 [id="edge45_Node000022_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node15 [id="edge46_Node000022_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node3 [id="edge47_Node000022_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node16 [id="edge48_Node000022_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node23 [id="edge49_Node000022_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="csp_problem_get_domain",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a86b3f53f47b41dcdd6109aaa9103d5fa",tooltip="Gets the domain size for a variable in the CSP problem."];
  Node23 -> Node3 [id="edge50_Node000023_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node17 [id="edge51_Node000022_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node24 [id="edge52_Node000022_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="csp_problem_get_num\l_domains",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#abf80aeaad4438b9cbaefaa941e4f2315",tooltip="Gets the number of variables (domains) in the CSP problem."];
  Node24 -> Node3 [id="edge53_Node000024_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node25 [id="edge54_Node000010_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="csp_forward_check_context\l_destroy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$forward-checking_8c.html#a0787ac68808df63955a93e55aa5235e2",tooltip="Destroys a forward checking context and frees all associated memory."];
  Node25 -> Node3 [id="edge55_Node000025_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node3 [id="edge56_Node000010_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node26 [id="edge57_Node000001_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="diff",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test-forward-checking_8c.html#a250d496ab2050def23b015480d7a5568",tooltip=" "];
  Node26 -> Node15 [id="edge58_Node000026_Node000015",color="steelblue1",style="solid",tooltip=" "];
}
