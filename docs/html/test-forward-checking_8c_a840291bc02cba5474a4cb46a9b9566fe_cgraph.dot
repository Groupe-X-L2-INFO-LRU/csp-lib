digraph "main"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Roboto,fontsize=10,labelfontname=Roboto,labelfontsize=10];
  node [fontname=Roboto,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="main",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="csp_finish",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a1cb2bdbf4475cdf23c40206614fd5d53",tooltip="Finalizes the CSP library."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="csp_init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a9ae781811992703aec18cf10d7685c80",tooltip="Initializes the CSP library."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="_verify",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#afdbe5d4548be89653cd14254ecfc3efc",tooltip=" "];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="csp_initialised",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#aca1712012517bff1090a471f502cf729",tooltip="Checks if the CSP library is initialized."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="test_single_var",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test-forward-checking_8c.html#ad73208eb4ba9df875d1fdf3c0b43a6e7",tooltip=" "];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="always_true",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test-forward-checking_8c.html#a7231f3eaa68050bf683cc6d3b0f8879e",tooltip=" "];
  Node6 -> Node8 [id="edge7_Node000006_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="csp_constraint_create",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a7c7ffdd26fbe5e2729b593cc6937cdcf",tooltip="Creates a new constraint with the specified arity and check function."];
  Node8 -> Node5 [id="edge8_Node000008_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node9 [id="edge9_Node000006_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="csp_constraint_set\l_variable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a6929282e729d2c786b6be546b1c3e312",tooltip="Sets which CSP variable is related to a specific position in the constraint."];
  Node9 -> Node5 [id="edge10_Node000009_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node10 [id="edge11_Node000006_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="csp_problem_create",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a536e0507b779b2300d004ef8347d4d8b",tooltip="Creates a new CSP problem instance with the specified parameters."];
  Node10 -> Node5 [id="edge12_Node000010_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node11 [id="edge13_Node000006_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="csp_problem_destroy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a0f4b67899ee7788002586217b13dde81",tooltip="Destroys a CSP problem instance and frees all associated resources."];
  Node11 -> Node12 [id="edge14_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="csp_constraint_destroy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a8fd5c98995a35845e7e57f9b13666231",tooltip="Destroys a constraint and frees all associated resources."];
  Node12 -> Node5 [id="edge15_Node000012_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node5 [id="edge16_Node000011_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node13 [id="edge17_Node000006_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="csp_problem_set_constraint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#ade8bd97367581ba9f1d4c8675fa11636",tooltip="Sets a constraint at the specified position in the CSP problem."];
  Node13 -> Node5 [id="edge18_Node000013_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node14 [id="edge19_Node000006_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="csp_problem_set_domain",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a0d1cbedfaeb27e353d49f3f9c9f5a30a",tooltip="Sets the domain size for a variable in the CSP problem."];
  Node14 -> Node5 [id="edge20_Node000014_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node15 [id="edge21_Node000006_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="csp_problem_solve_forward\l_checking",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$forward-checking_8c.html#aab2b763fd1833131dc1b7f43b2c7942a",tooltip="Solves a CSP problem using the forward checking algorithm with heuristics."];
  Node15 -> Node16 [id="edge22_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="backtrack_fc",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$forward-checking_8c.html#a1f0b1f4d23987c6c2209df2c7e2570ce",tooltip=" "];
  Node16 -> Node16 [id="edge23_Node000016_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node5 [id="edge24_Node000016_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node17 [id="edge25_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="fc_is_consistent",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$forward-checking_8c.html#a400289d0fceaceb244ed1e32f4860880",tooltip="Checks consistency of the current assignment under forward checking."];
  Node17 -> Node18 [id="edge26_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="csp_constraint_get\l_arity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a0ec9ba5a3f78127657d0ab0f2d3a5bbd",tooltip="Gets the arity of a constraint."];
  Node18 -> Node5 [id="edge27_Node000018_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node19 [id="edge28_Node000017_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="csp_constraint_get\l_check",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#ac9b8e8925b0302c3cdd35b0186a1acd8",tooltip="Gets the check function associated with a constraint."];
  Node19 -> Node5 [id="edge29_Node000019_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node20 [id="edge30_Node000017_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="csp_constraint_get\l_variable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a4cfb5884d7fe282dbecebefb53bb9cdd",tooltip="Gets the variable ID associated with a specific position in the constraint."];
  Node20 -> Node5 [id="edge31_Node000020_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node21 [id="edge32_Node000017_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="csp_problem_get_constraint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#aba7697a379d5f761429bb911e2bc2bbc",tooltip="Gets the constraint at the specified position in the CSP problem."];
  Node21 -> Node5 [id="edge33_Node000021_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node22 [id="edge34_Node000017_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="csp_problem_get_num\l_constraints",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a1dc56cea8c87ec1ef2e4489536cd1f0e",tooltip="Gets the number of constraints in the CSP problem."];
  Node22 -> Node5 [id="edge35_Node000022_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node23 [id="edge36_Node000016_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="order_values_lcv",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$heuristics_8c.html#a9c3a8a6b03e49553f45c6144f97e1fb4",tooltip="Implements the Least Constraining Value (LCV) heuristic for value ordering."];
  Node23 -> Node18 [id="edge37_Node000023_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node23 -> Node20 [id="edge38_Node000023_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node23 -> Node21 [id="edge39_Node000023_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node23 -> Node22 [id="edge40_Node000023_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node24 [id="edge41_Node000016_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="prune_neighbors",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$heuristics_8c.html#a2840f304ec278feae32d3d11915a7a78",tooltip="Prunes inconsistent values from neighboring variables during forward checking."];
  Node24 -> Node18 [id="edge42_Node000024_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node19 [id="edge43_Node000024_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node20 [id="edge44_Node000024_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node21 [id="edge45_Node000024_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node22 [id="edge46_Node000024_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node25 [id="edge47_Node000016_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="restore_pruned",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$heuristics_8c.html#a22131bfb5921b024b7886b33b3fa1c4b",tooltip="Restores values that were pruned during forward checking when backtracking occurs."];
  Node16 -> Node26 [id="edge48_Node000016_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="select_unassigned_var",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$heuristics_8c.html#a934ee1c54ecdfa65b205d3f9888e38de",tooltip="Implements the Minimum Remaining Values (MRV) heuristic for variable selection."];
  Node15 -> Node27 [id="edge49_Node000015_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="csp_forward_check_context\l_create",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$forward-checking_8c.html#a80a2e22a4514587505e87b68cd29841b",tooltip="Creates and initializes a forward checking context."];
  Node27 -> Node18 [id="edge50_Node000027_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node19 [id="edge51_Node000027_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node20 [id="edge52_Node000027_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node5 [id="edge53_Node000027_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node21 [id="edge54_Node000027_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node28 [id="edge55_Node000027_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="csp_problem_get_domain",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#a86b3f53f47b41dcdd6109aaa9103d5fa",tooltip="Gets the domain size for a variable in the CSP problem."];
  Node28 -> Node5 [id="edge56_Node000028_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node22 [id="edge57_Node000027_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node29 [id="edge58_Node000027_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="csp_problem_get_num\l_domains",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8c.html#abf80aeaad4438b9cbaefaa941e4f2315",tooltip="Gets the number of variables (domains) in the CSP problem."];
  Node29 -> Node5 [id="edge59_Node000029_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node30 [id="edge60_Node000015_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="csp_forward_check_context\l_destroy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$forward-checking_8c.html#a0787ac68808df63955a93e55aa5235e2",tooltip="Destroys a forward checking context and frees all associated memory."];
  Node30 -> Node5 [id="edge61_Node000030_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node5 [id="edge62_Node000015_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node31 [id="edge63_Node000001_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="test_three_var_diff",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test-forward-checking_8c.html#aebadbf73aad5c0730e4272306f6a5388",tooltip=" "];
  Node31 -> Node8 [id="edge64_Node000031_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node9 [id="edge65_Node000031_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node10 [id="edge66_Node000031_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node11 [id="edge67_Node000031_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node13 [id="edge68_Node000031_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node14 [id="edge69_Node000031_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node15 [id="edge70_Node000031_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node32 [id="edge71_Node000031_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="diff",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test-forward-checking_8c.html#a250d496ab2050def23b015480d7a5568",tooltip=" "];
  Node32 -> Node20 [id="edge72_Node000032_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node33 [id="edge73_Node000001_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="test_two_var_diff",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test-forward-checking_8c.html#ab497f67117be78c07a415960ba822485",tooltip=" "];
  Node33 -> Node8 [id="edge74_Node000033_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node9 [id="edge75_Node000033_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node10 [id="edge76_Node000033_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node11 [id="edge77_Node000033_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node13 [id="edge78_Node000033_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node14 [id="edge79_Node000033_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node15 [id="edge80_Node000033_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node32 [id="edge81_Node000033_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node34 [id="edge82_Node000001_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="test_unsatisfiable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test-forward-checking_8c.html#a769d87bae594656fbf9732ac5173f5b1",tooltip=" "];
  Node34 -> Node8 [id="edge83_Node000034_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node9 [id="edge84_Node000034_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node10 [id="edge85_Node000034_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node11 [id="edge86_Node000034_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node13 [id="edge87_Node000034_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node14 [id="edge88_Node000034_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node15 [id="edge89_Node000034_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node32 [id="edge90_Node000034_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node35 [id="edge91_Node000001_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="test_with_data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test-forward-checking_8c.html#a8d8bb23667ef5a832ac998a3204d6838",tooltip=" "];
  Node35 -> Node8 [id="edge92_Node000035_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node9 [id="edge93_Node000035_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node10 [id="edge94_Node000035_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node11 [id="edge95_Node000035_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node13 [id="edge96_Node000035_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node14 [id="edge97_Node000035_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node15 [id="edge98_Node000035_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node36 [id="edge99_Node000035_Node000036",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="sumLeq",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test-forward-checking_8c.html#a6b4a37aa63bd372d499018b7e0a71a01",tooltip=" "];
  Node36 -> Node20 [id="edge100_Node000036_Node000020",color="steelblue1",style="solid",tooltip=" "];
}
