digraph "src/forward-checking.c"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Roboto,fontsize=10,labelfontname=Roboto,labelfontsize=10];
  node [fontname=Roboto,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="src/forward-checking.c",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Forward checking algorithm with MRV and LCV heuristics implementation."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="forward-checking.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$forward-checking_8h.html",tooltip="Forward checking algorithm for constraint satisfaction problems."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="csp.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp_8h.html",tooltip="Header file for the CSP (Constraint Satisfaction Problem) library."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="stdbool.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node3 -> Node5 [id="edge4_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="stddef.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="assert.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="signal.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="stdlib.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="string.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="csp_internal.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$csp__internal_8h.html",tooltip="Internal header for CSP library implementation."];
  Node10 -> Node3 [id="edge10_Node000010_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node11 [id="edge11_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="heuristics.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$heuristics_8h.html",tooltip="Heuristics for improving CSP solver performance."];
  Node11 -> Node5 [id="edge12_Node000011_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node2 [id="edge13_Node000011_Node000002",color="steelblue1",style="solid",tooltip=" "];
}
